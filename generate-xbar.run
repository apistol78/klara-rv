import(traktor)

function main(argv)

	local NMASTERS = tonumber(argv:get(0))  -- cpu ibus, cpu dbus, dma
	local NSLAVES = tonumber(argv:get(1))   -- spif, sdram, uart, i2c, sd, timer, audio, plic, video

	local o = stdout

	o:printLn("// Do NOT edit; this file is autogenerated.")
	o:printLn("`default_nettype none")
	o:printLn()

	o:printLn("// #note master 0 has highest priority.")
	o:printLn("module XBAR_" .. NMASTERS .. "_" ..NSLAVES .. "(")
	o:printLn("\tinput wire i_reset,")
	o:printLn("\tinput wire i_clock,")

	-- Masters
	for i = 0, NMASTERS - 1 do
		o:printLn()
		o:printLn("\t// Master " .. i)
		o:printLn("\tinput wire i_m" .. i .. "_rw,")
		o:printLn("\tinput wire i_m" .. i .. "_request,")
		o:printLn("\toutput bit o_m" .. i .. "_ready,")
		o:printLn("\tinput wire [31:0] i_m" .. i .. "_address,")
		o:printLn("\toutput bit [31:0] o_m" .. i .. "_rdata,")
		o:printLn("\tinput wire [31:0] i_m" .. i .. "_wdata,")
	end

	-- Slaves
	for i = 0, NSLAVES - 1 do
		o:printLn()
		o:printLn("\t// Slave " .. i)
		o:printLn("\toutput bit o_s" .. i .. "_rw,")
		o:printLn("\toutput bit o_s" .. i .. "_request,")
		o:printLn("\tinput wire i_s" .. i .. "_ready,")
		o:printLn("\toutput bit [31:0] o_s" .. i .. "_address,")
		o:printLn("\tinput wire [31:0] i_s" .. i .. "_rdata,")
		o:print("\toutput bit [31:0] o_s" .. i .. "_wdata")
		if i < NSLAVES - 1 then o:printLn(",") else o:printLn() end    
	end

	o:printLn(");")

	for i = 0, NSLAVES - 1 do
		o:printLn("\tbit [3:0] s" .. i .. "_source;")
		o:printLn("\tbit [3:0] next_s" .. i .. "_source;")
	end
	o:printLn()

	o:printLn("\talways_ff @(posedge i_clock) begin")
	for i = 0, NSLAVES - 1 do
		o:printLn("\t\ts" .. i .. "_source <= next_s" .. i .. "_source;")
	end
	o:printLn("\tend")
	o:printLn()

	o:printLn("\talways_comb begin")
	for i = 0, NSLAVES - 1 do
		o:printLn("\t\to_s" .. i .. "_rw = 1'b0;")
		o:printLn("\t\to_s" .. i .. "_request = 1'b0;")
		o:printLn("\t\to_s" .. i .. "_address = 32'h0;")
		o:printLn("\t\to_s" .. i .. "_wdata = 32'h0;")
	end
	o:printLn()
	for i = 0, NMASTERS - 1 do
		o:printLn("\t\to_m" .. i .. "_ready = 1'b0;")
		o:printLn("\t\to_m" .. i .. "_rdata = 32'h0;")
	end
	o:printLn()
	for i = 0, NSLAVES - 1 do
		for j = 0, NMASTERS - 1 do
			o:print("\t\t")
			if j > 0 then o:print("else ") end
			o:printLn("if (next_s" .. i .. "_source == 4'h" .. string.format("%x", j + 1) .. ") begin")
			o:printLn("\t\t\to_s" .. i .. "_rw = i_m" .. j .. "_rw;")
			o:printLn("\t\t\to_s" .. i .. "_request = 1'b1;")
			o:printLn("\t\t\to_m" .. j .. "_ready = i_s" .. i .. "_ready;")
			o:printLn("\t\t\to_s" .. i .. "_address = { 4'h0, i_m" .. j .. "_address[27:0] };")
			o:printLn("\t\t\to_m" .. j .. "_rdata = i_s" .. i .. "_rdata;")
			o:printLn("\t\t\to_s" .. i .. "_wdata = i_m" .. j .. "_wdata;")
			o:printLn("\t\tend")
		end
		if i < NSLAVES - 1 then o:printLn() end
	end
	o:printLn("\tend")
	o:printLn()

	o:printLn("\talways_comb begin")
	for i = 0, NSLAVES - 1 do
		o:printLn("\t\tnext_s" .. i .. "_source = 4'h0;")
	end
	for i = NMASTERS - 1, 0, -1 do
		o:printLn()
		o:printLn("\t\tif (i_m" .. i .. "_request) begin")
		for j = 0, NSLAVES - 1 do
			o:printLn("\t\t\tif (")
			o:printLn("\t\t\t\ti_m" .. i .. "_address[31:28] == 4'h" .. string.format("%x", j) .. " &&")
			o:printLn("\t\t\t\t(s" .. j .. "_source == 4'h0 || s" .. j .. "_source == 4'h" .. string.format("%x", i + 1) .. ")")
			o:printLn("\t\t\t) begin")
			o:printLn("\t\t\t\tnext_s" .. j .. "_source = 4'h" .. string.format("%x", i + 1) .. ";")
			o:printLn("\t\t\tend")
		end
		o:printLn("\t\tend")
	end
	o:printLn("\tend")

	o:printLn("endmodule")
end
