--[[
 Klara-RV
 Copyright (c) 2025 Anders Pistol.

 This Source Code Form is subject to the terms of the Mozilla Public
 License, v. 2.0. If a copy of the MPL was not distributed with this
 file, You can obtain one at https://mozilla.org/MPL/2.0/.
]]

-- Recursive convert CPU from SystemVerilog to plain old Verilog.
-- Using "sv2v" tool found at https://github.com/zachjs/sv2v

import(traktor)

local function platform_select(default, windows)
	if os.identifier == "windows" then return windows end
	return default
end

local SV2V < const > = platform_select("3rdp/sv2v/sv2v-Linux/sv2v", "3rdp/sv2v/sv2v-Windows/sv2v.exe")

local function traverse(path, visitor)
	local fa = FileSystem.getInstance():find(path.pathName .. "/*.*")
	for i = 0, fa.size - 1 do
		local f = fa:get(i)
		local p = f.path
		local fn = p.fileName
		local pn = p.pathName
		if f.directory then
			if fn ~= "." and fn ~= ".." then
				if not traverse(p, visitor) then return false end
			end
		else
			if not visitor(p) then return false end
		end
	end
	return true
end

function main()
	local base < const > = Path("./rtl")
	traverse(base, function(path)
		if path.extension ~= "sv" or path.pathOnly == "./rtl/cpu/private/generated" then return true end
		local p < const > = FileSystem.getInstance():getRelativePath(
			FileSystem.getInstance():getAbsolutePath(path),
			FileSystem.getInstance():getAbsolutePath(base)
		)
		FileSystem.getInstance():makeAllDirectories(Path("./rtl-v/" .. p.pathOnly))
		local xc = run:execute(SV2V .. " --incdir=./rtl/cpu " .. path.pathName .. " --write=" .. "./rtl-v/" .. p.pathNameNoExtension .. ".v")
		if xc == 0 then
			stdout:printLn("\"" .. path.pathName .. "\" converted successfully.")
			return true
		else
			stderr:printLn("Unable to execute \"sv2v\"; ensure \"sv2v\" is accessible from PATH.")
			return false
		end
	end)
	return 0
end
